# Таблица умножения
# Условие: На вход подается число n.
# Задача: Написать скрипт в любой парадигме, который выводит на экран таблицу умножения всех чисел от 1 до n.
# Обоснуйте выбор парадигм.

# Пример вывода:
# 1 * 1 = 1
# 1 * 2 = 2
# 1 * 3 = 3
# 1 * 4 = 4
# 1 * 5 = 5
# 1 * 6 = 6
# ..
# 1 * 9 = 9

# Var1 Структурная парадигма (n1)
print("Structural paradigm")
n1 = int(input("Введите число n1: ")) 
print("Таблица умножения на", n1)   
for count in range(1, 11):     
   print(n1, 'x', count, '=', n1 * count)

# Var2 Процедурная парадигма (n2)
def mult_table(a):
   for count in range(1, 11):
    print(a, 'x', count, '=', a * count)
print("Procedural paradigm")
n2 = int(input("Введите число n2: "))
print("Таблица умножения на", n2)
mult_table(n2)

# Оба варианта имеют место быть. Из двух вариантов можно выбрать только в конкретных условиях:
# Вариант №1 Структурная парадигма: код проще, короче. Но ограниченное использование (если один раз).
# Вариант №2 Процедурная парадигма: код сложнее. Однако применение гораздо шире (в том числе и в школе).

# По большому счету: выбрать невозможно!!!